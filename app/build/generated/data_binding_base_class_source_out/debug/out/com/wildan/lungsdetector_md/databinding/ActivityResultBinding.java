// Generated by view binder compiler. Do not edit!
package com.wildan.lungsdetector_md.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.wildan.lungsdetector_md.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView description;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider2;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView titleIllness;

  private ActivityResultBinding(@NonNull ConstraintLayout rootView, @NonNull TextView description,
      @NonNull View divider, @NonNull View divider2, @NonNull ImageView imageView,
      @NonNull TextView textView4, @NonNull TextView titleIllness) {
    this.rootView = rootView;
    this.description = description;
    this.divider = divider;
    this.divider2 = divider2;
    this.imageView = imageView;
    this.textView4 = textView4;
    this.titleIllness = titleIllness;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description;
      TextView description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = rootView.findViewById(id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = rootView.findViewById(id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.title_illness;
      TextView titleIllness = rootView.findViewById(id);
      if (titleIllness == null) {
        break missingId;
      }

      return new ActivityResultBinding((ConstraintLayout) rootView, description, divider, divider2,
          imageView, textView4, titleIllness);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
